{"version":3,"file":"static/js/7.b49cfcca.chunk.js","mappings":"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","sources":["components/ContactSearch/ContactSearch.jsx","components/AddEditContactForm/AddEditContactForm.jsx","components/ContactsList/ContactsList.jsx","components/ContactsView/ContactsView.jsx"],"sourcesContent":["import React from 'react';\n\nimport TextField from '@mui/material/TextField';\n\nconst ContactSearch = ({ value, onChange }) => {\n  return (\n    <TextField\n      id=\"contacts-search\"\n      label=\"Search\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n      type=\"search\"\n    />\n  );\n};\n\nexport default ContactSearch;\n","import { useEffect, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ReactPhoneInput from 'react-phone-input-material-ui';\nimport { useConfirm } from 'material-ui-confirm';\nimport PropTypes from 'prop-types';\nimport {\n  useCreateContactMutation,\n  useEditContactMutation,\n} from 'redux/contacts/contacts-reducer';\n\nconst theme = createTheme();\n\nfunction AddEditContactForm({\n  addedContacts,\n  onClose,\n  contactIdToEdit = null,\n}) {\n  const [contact, setContact] = useState({ name: '', number: '' });\n\n  const [createContact, { isCreating }] = useCreateContactMutation();\n  const [editContact, { isEditing }] = useEditContactMutation();\n\n  const confirmDialog = useConfirm();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setContact(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  useEffect(() => {\n    if (contactIdToEdit) {\n      setContact(addedContacts.find(contact => contact.id === contactIdToEdit));\n    }\n  }, [contactIdToEdit, addedContacts]);\n\n  const onNumberChange = value => {\n    setContact(prevState => {\n      return { ...prevState, number: value };\n    });\n  };\n\n  const nameAlreadyExist = (contacts, nameToAdd) => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === nameToAdd.toLowerCase()\n    );\n  };\n\n  const reset = () => {\n    setContact({ name: '', number: '' });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contact.name.length === 0 || contact.number.length === 0) {\n      confirmDialog({\n        title: `Fields \"Name\" or \"Number\" can't be empty!`,\n        description: `Type \"Name\" and \"Number\" to relevant fields!`,\n        cancellationText: '',\n      }).catch(() => {});\n      return;\n    }\n    if (contactIdToEdit) {\n      editContact({\n        id: contactIdToEdit,\n        ...contact,\n      }).then(_ => {\n        onClose();\n        reset();\n      });\n    } else {\n      if (!nameAlreadyExist(addedContacts, contact.name)) {\n        createContact(contact).then(_ => {\n          onClose();\n          reset();\n        });\n      } else {\n        confirmDialog({\n          title: `Oh no!`,\n          description: `Name ${contact.name} already exists in your phone book`,\n          cancellationText: '',\n        }).catch(() => {});\n      }\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            {contactIdToEdit ? 'Edit contact' : 'Add new contact'}\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              autoComplete=\"Name\"\n              autoFocus\n              value={contact.name}\n              onChange={handleChange}\n            />\n            <ReactPhoneInput\n              required\n              value={contact.number}\n              onChange={onNumberChange} // passed function receives the phone value\n              component={TextField}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={isEditing || isCreating}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              {contactIdToEdit ? 'Save changes' : 'Add'}\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default AddEditContactForm;\n\nAddEditContactForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  contactIdToEdit: PropTypes.string,\n};\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Checkbox from '@mui/material/Checkbox';\nimport Avatar from '@mui/material/Avatar';\nimport { useState } from 'react';\nimport ContactSearch from 'components/ContactSearch/ContactSearch';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\nimport { useConfirm } from 'material-ui-confirm';\nimport Modal from '@mui/material/Modal';\nimport AddEditContactForm from 'components/AddEditContactForm/AddEditContactForm';\nimport {\n  useDeleteContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/contacts-reducer';\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\nconst ContactsList = () => {\n  const [filter, setFilter] = useState('');\n  const { data } = useFetchContactsQuery();\n  console.log(data);\n  const [checked, setChecked] = useState([]);\n  const confirmDialog = useConfirm();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [contactIdToEdit, setContactIdToEdit] = useState('');\n  const [deleteContact] = useDeleteContactMutation();\n\n  const handleFilterChange = value => {\n    setFilter(value);\n  };\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setContactIdToEdit('');\n  };\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleDelete = () => {\n    const namesToDelete = checked\n      .map(idToDelete => data.find(({ id }) => id === idToDelete).name)\n      .join(', ');\n    confirmDialog({\n      description: `Are you really want to delete ${namesToDelete} from your contact book?`,\n    })\n      .then(() => {\n        checked.map(id => deleteContact(id).then(_ => setChecked([])));\n      })\n      .catch(() => {});\n  };\n\n  const handleEditContactClick = id => {\n    setContactIdToEdit(id);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"xs\" sx={{ mt: 2 }}>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-around',\n          }}\n        >\n          <IconButton aria-label=\"add\" size=\"large\" onClick={handleOpenModal}>\n            <AddCircleOutlineOutlinedIcon />\n          </IconButton>\n          <ContactSearch value={filter} onChange={handleFilterChange} />\n          <IconButton\n            aria-label=\"delete\"\n            size=\"large\"\n            disabled={checked.length < 1}\n            onClick={handleDelete}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Box>\n        <List\n          dense\n          sx={{ width: '100%', maxWidth: 385, bgcolor: 'background.paper' }}\n        >\n          {data &&\n            data.length > 0 &&\n            data\n              .filter(({ name }) =>\n                name.toLowerCase().includes(filter.toLowerCase())\n              )\n              .map(({ id, name, number }) => {\n                const labelId = `checkbox-list-secondary-label-${id}`;\n                return (\n                  <ListItem\n                    key={id}\n                    secondaryAction={\n                      <Checkbox\n                        edge=\"end\"\n                        onChange={handleToggle(id)}\n                        checked={checked.indexOf(id) !== -1}\n                        inputProps={{ 'aria-labelledby': labelId }}\n                      />\n                    }\n                    disablePadding\n                  >\n                    <ListItemButton onClick={() => handleEditContactClick(id)}>\n                      <ListItemAvatar>\n                        <Avatar alt={`${name}`} />\n                      </ListItemAvatar>\n                      <ListItemText id={labelId} primary={`${name}`} />\n                      <ListItemText\n                        sx={{ textAlign: 'right' }}\n                        primary={`${number}`}\n                      />\n                    </ListItemButton>\n                  </ListItem>\n                );\n              })}\n        </List>\n      </Container>\n      {isModalOpen && (\n        <Modal\n          open={isModalOpen}\n          onClose={handleCloseModal}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <AddEditContactForm\n              addedContacts={data}\n              onClose={handleCloseModal}\n              contactIdToEdit={contactIdToEdit ? contactIdToEdit : null}\n            />\n          </Box>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n","import ContactsList from 'components/ContactsList/ContactsList';\nimport { ConfirmProvider } from 'material-ui-confirm';\n\nexport default function ContactsView() {\n  return (\n    <>\n      <ConfirmProvider>\n        <ContactsList />\n      </ConfirmProvider>\n    </>\n  );\n}\n"],"names":["value","onChange","TextField","id","label","e","currentTarget","type","theme","createTheme","addedContacts","onClose","contactIdToEdit","useState","name","number","contact","setContact","useCreateContactMutation","createContact","isCreating","useEditContactMutation","editContact","isEditing","confirmDialog","useConfirm","useEffect","find","reset","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","contacts","nameToAdd","preventDefault","length","then","_","toLowerCase","title","description","cancellationText","catch","noValidate","mt","margin","required","fullWidth","autoComplete","autoFocus","prevState","Button","disabled","mb","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","filter","setFilter","data","useFetchContactsQuery","console","log","checked","setChecked","isModalOpen","setIsModalOpen","setContactIdToEdit","useDeleteContactMutation","deleteContact","handleCloseModal","justifyContent","IconButton","size","onClick","AddCircleOutlineOutlined","namesToDelete","map","idToDelete","join","Delete","List","dense","includes","labelId","ListItem","secondaryAction","Checkbox","edge","currentIndex","indexOf","newChecked","push","splice","inputProps","disablePadding","ListItemButton","handleEditContactClick","ListItemAvatar","Avatar","alt","ListItemText","primary","textAlign","Modal","open","ContactsView"],"sourceRoot":""}