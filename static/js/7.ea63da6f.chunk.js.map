{"version":3,"file":"static/js/7.ea63da6f.chunk.js","mappings":"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","sources":["components/ContactSearch/ContactSearch.jsx","components/AddEditContactForm/AddEditContactForm.jsx","components/ContactsList/ContactsList.jsx","components/ContactsView/ContactsView.jsx"],"sourcesContent":["import React from 'react';\n\nimport TextField from '@mui/material/TextField';\n\nconst ContactSearch = ({ value, onChange }) => {\n  return (\n    <TextField\n      id=\"contacts-search\"\n      label=\"Search\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n      type=\"search\"\n    />\n  );\n};\n\nexport default ContactSearch;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ReactPhoneInput from 'react-phone-input-material-ui';\nimport { useConfirm } from 'material-ui-confirm';\nimport PropTypes from 'prop-types';\nimport { useCreateContactMutation } from 'redux/contacts/contacts-reducer';\n\nconst theme = createTheme();\n\nfunction AddEditContactForm({\n  addedContacts,\n  onClose,\n  contactIdToEdit = null,\n}) {\n  const [contact, setContact] = useState({ name: '', number: '' });\n  const dispatch = useDispatch();\n\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  const confirmDialog = useConfirm();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setContact(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  useEffect(() => {\n    if (contactIdToEdit) {\n      setContact(addedContacts.find(contact => contact.id === contactIdToEdit));\n    }\n  }, [contactIdToEdit, addedContacts]);\n\n  const onNumberChange = value => {\n    setContact(prevState => {\n      return { ...prevState, number: value };\n    });\n  };\n\n  const nameAlreadyExist = (contacts, nameToAdd) => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === nameToAdd.toLowerCase()\n    );\n  };\n\n  const reset = () => {\n    setContact({ name: '', number: '' });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contact.name.length === 0 || contact.number.length === 0) {\n      confirmDialog({\n        title: `Fields \"Name\" or \"Number\" can't be empty!`,\n        description: `Type \"Name\" and \"Number\" to relevant fields!`,\n        cancellationText: '',\n      }).catch(() => {});\n      return;\n    }\n    if (contactIdToEdit) {\n      dispatch();\n      /* contactsOperations.editContact({\n          id: contactIdToEdit,\n          name: contact.name,\n          number: contact.number,\n        }) */\n      onClose();\n      reset();\n    } else {\n      if (!nameAlreadyExist(addedContacts, contact.name)) {\n        createContact(contact).then(_ => {\n          onClose();\n          reset();\n        });\n      } else {\n        confirmDialog({\n          title: `Oh no!`,\n          description: `Name ${contact.name} already exists in your phone book`,\n          cancellationText: '',\n        }).catch(() => {});\n      }\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            {contactIdToEdit ? 'Edit contact' : 'Add new contact'}\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              autoComplete=\"Name\"\n              autoFocus\n              value={contact.name}\n              onChange={handleChange}\n            />\n            <ReactPhoneInput\n              required\n              value={contact.number}\n              onChange={onNumberChange} // passed function receives the phone value\n              component={TextField}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={isLoading}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              {contactIdToEdit ? 'Save changes' : 'Add'}\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default AddEditContactForm;\n\nAddEditContactForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  contactIdToEdit: PropTypes.string,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Container from '@mui/material/Container';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Checkbox from '@mui/material/Checkbox';\nimport Avatar from '@mui/material/Avatar';\nimport { useState } from 'react';\nimport ContactSearch from 'components/ContactSearch/ContactSearch';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\nimport { useConfirm } from 'material-ui-confirm';\nimport Modal from '@mui/material/Modal';\nimport AddEditContactForm from 'components/AddEditContactForm/AddEditContactForm';\nimport { useFetchContactsQuery } from 'redux/contacts/contacts-reducer';\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\nconst ContactsList = () => {\n  const [filter, setFilter] = useState('');\n  const { data } = useFetchContactsQuery();\n  console.log(data);\n  const dispatch = useDispatch();\n  const [checked, setChecked] = useState([]);\n  const confirmDialog = useConfirm();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [contactIdToEdit, setContactIdToEdit] = useState('');\n\n  const handleFilterChange = value => {\n    setFilter(value);\n  };\n\n  const handleOpenModal = () => setIsModalOpen(true);\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setContactIdToEdit('');\n  };\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleDelete = () => {\n    const namesToDelete = checked\n      .map(idToDelete => data.find(({ id }) => id === idToDelete).name)\n      .join(', ');\n    confirmDialog({\n      description: `Are you really want to delete ${namesToDelete} from your contact book?`,\n    })\n      .then(() => {\n        checked.map(id => dispatch(/* contactsOperations.deleteContact(id) */));\n        setChecked([]);\n      })\n      .catch(() => {});\n  };\n\n  const handleEditContactClick = id => {\n    setContactIdToEdit(id);\n    setIsModalOpen(true);\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"xs\" sx={{ mt: 2 }}>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-around',\n          }}\n        >\n          <IconButton aria-label=\"add\" size=\"large\" onClick={handleOpenModal}>\n            <AddCircleOutlineOutlinedIcon />\n          </IconButton>\n          <ContactSearch value={filter} onChange={handleFilterChange} />\n          <IconButton\n            aria-label=\"delete\"\n            size=\"large\"\n            disabled={checked.length < 1}\n            onClick={handleDelete}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Box>\n        <List\n          dense\n          sx={{ width: '100%', maxWidth: 385, bgcolor: 'background.paper' }}\n        >\n          {data &&\n            data.length > 0 &&\n            data\n              .filter(({ name }) =>\n                name.toLowerCase().includes(filter.toLowerCase())\n              )\n              .map(({ id, name, number }) => {\n                const labelId = `checkbox-list-secondary-label-${id}`;\n                return (\n                  <ListItem\n                    key={id}\n                    secondaryAction={\n                      <Checkbox\n                        edge=\"end\"\n                        onChange={handleToggle(id)}\n                        checked={checked.indexOf(id) !== -1}\n                        inputProps={{ 'aria-labelledby': labelId }}\n                      />\n                    }\n                    disablePadding\n                  >\n                    <ListItemButton onClick={() => handleEditContactClick(id)}>\n                      <ListItemAvatar>\n                        <Avatar alt={`${name}`} />\n                      </ListItemAvatar>\n                      <ListItemText id={labelId} primary={`${name}`} />\n                      <ListItemText\n                        sx={{ textAlign: 'right' }}\n                        primary={`${number}`}\n                      />\n                    </ListItemButton>\n                  </ListItem>\n                );\n              })}\n        </List>\n      </Container>\n      {isModalOpen && (\n        <Modal\n          open={isModalOpen}\n          onClose={handleCloseModal}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <AddEditContactForm\n              addedContacts={data}\n              onClose={handleCloseModal}\n              contactIdToEdit={contactIdToEdit ? contactIdToEdit : null}\n            />\n          </Box>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n","import ContactsList from 'components/ContactsList/ContactsList';\nimport { ConfirmProvider } from 'material-ui-confirm';\n\nexport default function ContactsView() {\n  return (\n    <>\n      <ConfirmProvider>\n        <ContactsList />\n      </ConfirmProvider>\n    </>\n  );\n}\n"],"names":["value","onChange","TextField","id","label","e","currentTarget","type","theme","createTheme","addedContacts","onClose","contactIdToEdit","useState","name","number","contact","setContact","dispatch","useDispatch","useCreateContactMutation","createContact","isLoading","confirmDialog","useConfirm","useEffect","find","reset","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","contacts","nameToAdd","preventDefault","length","toLowerCase","title","description","cancellationText","catch","then","_","noValidate","mt","margin","required","fullWidth","autoComplete","autoFocus","prevState","Button","disabled","mb","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","filter","setFilter","data","useFetchContactsQuery","console","log","checked","setChecked","isModalOpen","setIsModalOpen","setContactIdToEdit","handleCloseModal","justifyContent","IconButton","size","onClick","AddCircleOutlineOutlined","namesToDelete","map","idToDelete","join","Delete","List","dense","includes","labelId","ListItem","secondaryAction","Checkbox","edge","currentIndex","indexOf","newChecked","push","splice","inputProps","disablePadding","ListItemButton","handleEditContactClick","ListItemAvatar","Avatar","alt","ListItemText","primary","textAlign","Modal","open","ContactsView"],"sourceRoot":""}