{"version":3,"file":"static/js/881.afca3768.chunk.js","mappings":"qaAgBMA,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,MAA1C,eAAOC,EAAP,KAA2BC,EAA3B,KAAgBC,UAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAIAC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAEC,iBADiB,SAEId,EAAM,CAAEI,MAAAA,EAAOE,SAAAA,IAAYS,SAF/B,OAEbC,EAFa,OAGnBnB,GAASoB,EAAAA,EAAAA,KAAe,kBAAKD,GAAN,IAAgBZ,MAAAA,MAGvCC,EAAS,IACTE,EAAY,IAPO,2CAAH,sDAUlB,OACE,SAAC,IAAD,CAAeb,MAAOA,EAAtB,UACE,UAAC,IAAD,CAAWwB,UAAU,OAAOC,SAAS,KAArC,WACE,SAAC,KAAD,KACA,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAQJ,GAAI,CAAEK,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAAC,IAAD,OAEF,SAAC,IAAD,CAAYR,UAAU,KAAKS,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CACET,UAAU,OACVU,SAAUhB,EACViB,YAAU,EACVT,GAAI,CAAEU,GAAI,GAJZ,WAME,SAAC,IAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNzB,KAAK,QACL0B,aAAa,QACbC,WAAS,EACT1B,MAAOP,EACPkC,SAAU9B,KAEZ,SAAC,IAAD,CACEuB,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTvB,KAAK,WACLyB,MAAM,WACNI,KAAK,WACLL,GAAG,WACHE,aAAa,mBACbzB,MAAOL,EACPgC,SAAU9B,KAEZ,SAAC,IAAD,CACE+B,KAAK,SACLN,WAAS,EACTN,QAAQ,YACRP,GAAI,CAAEU,GAAI,EAAGU,GAAI,GACjBC,SAAUxC,EALZ,sBASA,SAAC,KAAD,CAAMyC,WAAS,EAACtB,GAAI,CAAEuB,UAAW,UAAjC,UACE,SAAC,KAAD,CAAMC,MAAI,EAACC,IAAE,EAAb,UACE,SAAC,IAAD,CAAMC,KAAK,YAAYnB,QAAQ,QAA/B,SACG,oD,4FCvGNoB,E,QAAeC,EAAAA,gBAAyB,CACnDC,UAAW,SAAAC,GAAO,MAAK,CACrBlD,MAAOkD,EAAQC,SAAS,CACtBC,MAAO,SAAAC,GAAW,MAAK,CACrBC,IAAK,eACLC,OAAQ,OACRC,MAAK,UAAMH,OAGfI,SAAUP,EAAQC,SAAS,CACzBC,MAAO,SAAAC,GAAW,MAAK,CACrBC,IAAK,gBACLC,OAAQ,OACRC,MAAK,UAAMH,WAMJtD,EAA0CgD,EAA1ChD,iBAAkB2D,EAAwBX,EAAxBW","sources":["components/LoginForm/LoginForm.jsx","redux/auth/authApiSlice.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useLoginMutation } from 'redux/auth/authApiSlice';\nimport { setCredentials } from 'redux/auth/authSlice';\n\nconst theme = createTheme();\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  const [login, { isLoading: isLogging }] = useLoginMutation();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userData = await login({ email, password }).unwrap();\n    dispatch(setCredentials({ ...userData, email }));\n\n    //dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              onChange={handleChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={handleChange}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={isLogging}\n            >\n              Sign In\n            </Button>\n            <Grid container sx={{ textAlign: 'center' }}>\n              <Grid item xs>\n                <Link href=\"/register\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import { apiSlice } from '../api/apiSlice';\n\nexport const authApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: credentials => ({\n        url: '/users/login',\n        method: 'POST',\n        body: { ...credentials },\n      }),\n    }),\n    register: builder.mutation({\n      query: credentials => ({\n        url: '/users/signup',\n        method: 'POST',\n        body: { ...credentials },\n      }),\n    }),\n  }),\n});\n\nexport const { useLoginMutation, useRegisterMutation } = authApiSlice;\n"],"names":["theme","createTheme","LoginForm","dispatch","useDispatch","useLoginMutation","login","isLogging","isLoading","useState","email","setEmail","password","setPassword","handleChange","target","name","value","handleSubmit","e","preventDefault","unwrap","userData","setCredentials","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","onSubmit","noValidate","mt","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","mb","disabled","container","textAlign","item","xs","href","authApiSlice","apiSlice","endpoints","builder","mutation","query","credentials","url","method","body","register","useRegisterMutation"],"sourceRoot":""}